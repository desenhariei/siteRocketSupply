/* Variáveis da Animação da Logo da Rocket */
let frameLogoRocket = document.getElementById('frameLogoAnimation')
let totalFramesLogoRocket = 400
let frameRateLogoRocket = 100
let currentFrameLogoRocket = 0
let pathLogoRocket = '../../assets/PNG/logoRocket/logoRocket'
let lastLoadTimeLogoRocket = 0
/* Variáveis da Animação de rotação da Camisa Parada */
let frameCamisaParada = document.getElementById('camisa3dParada')
let totalFramesCamisaParada = 100
let frameRateCamisaParada = 33
let currentFrameCamisaParada = 10
let pathCamisaParada = '../../assets/PNG/camisaParada/'
let lastLoadTimeCamisaParada = 0
let animatingCamisa = true
/* Variáveis da Animação de Traslação e Bounce da Camisa Parada */
let lastLoadMoveDown = null
let durationMoveDown = 3500
let startPositionCamisa = parseInt((window.getComputedStyle(frameCamisaParada).getPropertyValue('top')), 10)
let moveDownHeight = 200
/* Variáveis da Animação de Traslação da Sombra da Camisa Parada */
let shadownCamisaParada = document.getElementById('sombraCamisa3dParada')
let moveDownHeightShadown = 235
/* Variáveis da Animação do Bounce */
let durationBounce = 5000
let heightBounce = 15

document.addEventListener('DOMContentLoaded', () => {
    /* Animação de Bounce da Camisa Parada*/
    function bounce(timesTemp) {
        let startTimeBounce = timesTemp
        function animateBounce(timesTemp) {
            let animationBounceProgress = (timesTemp - startTimeBounce) / durationBounce
            let bounceMoviment = Math.sin(animationBounceProgress * Math.PI * 2) * heightBounce
            /* Anima o Bounce da Camisa Parada */
            frameCamisaParada.style.top = `${moveDownHeight + bounceMoviment}px`
            /* Anima o Bounce Sombra da Camisa Parada */
            shadownCamisaParada.style.top = `${moveDownHeightShadown + bounceMoviment}px`
            requestAnimationFrame(animateBounce)
        }
        requestAnimationFrame(animateBounce)
    }
    /* Animação descendo da Camisa Parada descendo */
    function moveDown(timesTemp) {
        if (!lastLoadMoveDown) {
            lastLoadMoveDown = timesTemp
            setTimeout(() => {
                let slogan = document.getElementById('sloganHome')
                slogan.style.opacity = '1'
            }, 3000);
        }
        let animationMoveDownProgress = Math.min(((timesTemp - lastLoadMoveDown) / durationMoveDown), 1)
        /* Atualiza o movimento de descida da Camisa Parada */
        frameCamisaParada.style.top = `${startPositionCamisa + ((moveDownHeight - startPositionCamisa) * animationMoveDownProgress)}px`
        /* Atualiza o movimento de descida da Sombra da Camisa Parada */
        shadownCamisaParada.style.top = `${startPositionCamisa + ((moveDownHeightShadown - startPositionCamisa) * animationMoveDownProgress)}px`

        if (animationMoveDownProgress < 1) {
            /* Reinicia o Loop */
            requestAnimationFrame(moveDown)
        } else {
            /* Muda da animação da Camisa Parada descendo da tela para de Bounce */
            requestAnimationFrame(bounce)
        }
    }
    /* Inicia a Animação de Descida e de Bounce */
    requestAnimationFrame(moveDown)

    /* Animações da Logo e da Camisa */
    /* Corrige o nome dos arquivos */
    function renameFrame(name) {
        return name.toString().padStart(4, '0')
    }
    /* Substitui os frames na tela */
    function loadFrames(frameInitial, path, currentFrame) {
        frameInitial.src = `${path}${renameFrame(currentFrame)}.png`
    }

    function animate(loadPageTime) {
        /* Animação da Logo da Rocket */
        /* Controla para que cada frame seja carregado somente quando for ser usado */
        if (loadPageTime - lastLoadTimeLogoRocket >= frameRateLogoRocket) {
            if (currentFrameLogoRocket == totalFramesLogoRocket) {
                currentFrameLogoRocket = 0
            }
            loadFrames(frameLogoRocket, pathLogoRocket, currentFrameLogoRocket)
            /* Atualiza valores para os próximos loops */
            currentFrameLogoRocket++
            lastLoadTimeLogoRocket = loadPageTime
        }
        /* Animação da Camiseta Parada */
        /* Controla para que cada frame seja carregado somente quando for ser usado */
        if (animatingCamisa && loadPageTime - lastLoadTimeCamisaParada >= frameRateCamisaParada) {
            if (currentFrameCamisaParada == totalFramesCamisaParada) {
                animatingCamisa = false
            }
            loadFrames(frameCamisaParada, pathCamisaParada, currentFrameCamisaParada)
            /* Atualiza valores para os próximos loops */
            currentFrameCamisaParada++
            lastLoadTimeCamisaParada = loadPageTime
        }
        // Reinicia o loop
        requestAnimationFrame(animate)
    }
    // Chama o loop
    requestAnimationFrame(animate)
})

/* Variáveis das Estrelas */
let starContainer = document.getElementById('containerStars')
let maxAnimationStarDuration = 5
let minAnimationStarDuration = 2
let paddingXAnimationStarLeft = 0.2
let positionStarY = -50
let positionEndStarsX = 100

/* Animação de Criação e Movimentação das Estrelas */
function createStars() {
    /* Não deixa as Estrelas começarem muito proximo das bordas da página */
    let positionStarX
    if (0.8 <= (Math.random() * window.innerWidth) <= 1) {
        positionStarX = (Math.random() * window.innerWidth) - (window.innerWidth * paddingXAnimationStarLeft)
    } else {
        (Math.random() * window.innerHeight)
    }
    /* Torna a posição final das Estrelas mais dinamica */
    let positionEndStarsY = ((Math.random() * (2 - 0.5) + 0.5) * window.innerHeight)
    let animationStarDurationRight = (maxAnimationStarDuration - (Math.random() * (maxAnimationStarDuration - minAnimationStarDuration))) * 1000
    /* Cria e manipula o html da Estrela */
    let star = document.createElement('div')
    star.classList.add('stars')
    starContainer.appendChild(star)
    /* Gera um número aleátorio para nomear as animações das estrelas sem gerar conflito entre elas */
    let indiceAnimationStar = Date.now()
    /* Cria os valores css com base em variáveis aleátorias, insere na folha de estilo e passa a animação para as estrelas */
    function animateStars() {
        let styleSheet = document.styleSheets[1]
        let keyFrameStar = `@keyframes fallStarsAnimation${indiceAnimationStar}{
        from{
        top:${positionStarY}px;
        right:${positionStarX}px;
        }
        to{
        top:${positionEndStarsY}px;
        right:${positionEndStarsX}vw;
        }
        }`
        styleSheet.insertRule(keyFrameStar, styleSheet.cssRules.length)
        star.style.animation = `fallStarsAnimation${indiceAnimationStar} ${animationStarDurationRight}ms linear forwards`
    }
    animateStars()
    /* Destroi as estrelas depois de já animadas */
    setTimeout(() => {
        star.remove()
    }, animationStarDurationRight + 1000);

}
/* Chama e cria o loop da função que cria as estrelas */
setInterval(createStars, 5000)

/* Efeito Parallax */
let divAboutUs = document.getElementById('apresentacao')
window.addEventListener('scroll', () => {
    let deslocamentoScroll = window.scrollY
    divAboutUs.style.transform = `translateY(${deslocamentoScroll * -1.2}px)`
})

/* Importador de Imagens para o Carrossel da Home */
let carrosselHomeContainer = document.getElementById('carrosselHome')
let containerCarrossel1 = document.getElementById('carrosselColuna1')
let containerCarrossel2 = document.getElementById('carrosselColuna2')
let pathImgCarrossel = '../../assets/Fotos/carrosselHome/'
let allImgCarrossel = []
for (i = 1; i < 28; i++) {
    i = i.toString().padStart(3, '0')
    let imgCarrosselHome = document.createElement('img')
    imgCarrosselHome.src = `${pathImgCarrossel}${i}.jpg`
    allImgCarrossel.push(imgCarrosselHome)
}
let divisaoAllImgCarrossel = Math.ceil(allImgCarrossel.length/2)
for(i=0;i<divisaoAllImgCarrossel;i++){
    let img = allImgCarrossel[i]
    containerCarrossel1.appendChild(img)
    img.classList.add('imgCarrossel','imgsCarrosselColuna1')
}
for(i=divisaoAllImgCarrossel;i<allImgCarrossel.length;i++){
    let img = allImgCarrossel[i]
    containerCarrossel2.appendChild(img)
    img.classList.add('imgCarrossel','imgsCarrosselColuna2')
}

window.addEventListener('scroll',()=>{
    window.addEventListener('scroll', () => {
        let deslocamentoScroll = window.scrollY
        containerCarrossel1.style.transform = `translateY(${deslocamentoScroll*-1}px)`
        containerCarrossel2.style.transform = `translateY(${deslocamentoScroll*4}px)`
    })
})

/* Triggers */
let apresentacaoTrigger=document.getElementById('apresentacao')
window.addEventListener('scroll',()=>{
    let deslocamentoScroll=window.scrollY+524
    /* Trigger da Camiseta Parada */
    let triggerCamisetaParada=apresentacaoTrigger.offsetTop
    if(deslocamentoScroll>=triggerCamisetaParada){
        frameCamisaParada.style.opacity='0'
        shadownCamisaParada.style.opacity='0'
    }else{
        frameCamisaParada.style.opacity='1'
        shadownCamisaParada.style.opacity='1'
    }
    if(deslocamentoScroll<=triggerCamisetaParada+apresentacaoTrigger.clientHeight){
        carrosselHomeContainer.style.transform = `translateY(${deslocamentoScroll * -1.2}px)`
    }
})